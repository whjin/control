<template>
	<AioVideoView :target="aioVideoTarget" :style="aioVideoStyle" @click="toggleFullScreen"></AioVideoView>
</template>

<script>
	import {
		mapState
	} from 'vuex';

	export default {
		data() {
			return {
				// 双击状态
				dblclickFlag: false,
				// 全屏状态
				fullscreenState: false,
				// 默认样式
				aioVideoStyle: {
					width: '1168',
					height: '767',
					left: '367',
					top: '178',
				},
				// 设置全屏
				fullscreenStyle: ['1920', '1080', '0', '0'],
				// 取消全屏
				miniscreenStyle: ['1168', '767', '367', '178'],
			};
		},
		computed: {
			...mapState({
				// 对讲流
				aioVideoTarget: state => state.app.aioVideoTarget,
			})
		},
		created() {
			const _this = this;
			uni.getSubNVueById('aioVideoView').hide();
			uni.$on('set-aioVideo', type => {
				switch (type) {
					case 'fullscreen':
						_this.fullscreenState = true;
						_this.setAioVideoStyle(..._this.fullscreenStyle);
						break;
					case 'miniscreen':
						_this.fullscreenState = false;
						_this.setAioVideoStyle(..._this.miniscreenStyle);
						break;
				}
			});
		},
		methods: {
			toggleFullScreen() {
				if (this.dblclickFlag) {
					this.dblclickFlag = false;
					if (this.fullscreenState) {
						uni.$emit("set-aioVideo", "miniscreen");
					} else {
						uni.$emit("set-aioVideo", "fullscreen");
					}
				} else {
					this.dblclickFlag = true;
				}
			},
			setAioVideoStyle(width, height, left, top) {
				this.aioVideoStyle = {
					width,
					height,
					left,
					top
				}
			}
		}
	};
</script>

<style>
</style>
